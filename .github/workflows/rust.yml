name: Rust CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 3 * * *'   # nightly at 3am UTC
  workflow_dispatch:       # allow manual runs

env:
  CARGO_TERM_COLOR: always

jobs:
  fast-checks:
    runs-on: ubuntu-latest
    timeout-minutes: 10  # ⏱ prevent long hangs in CI
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run Clippy (lint)
        run: cargo clippy --workspace --all-targets --all-features -- -D warnings

      # ✅ Exclude fuzz crates to prevent long-running tests
      - name: Run fast unit tests (no fuzz targets)
        run: |
          cargo test --workspace --exclude dataplane-fuzz -- --nocapture --test-threads=$(nproc)

      - name: Security audit
        run: |
          cargo install cargo-audit --locked
          cargo audit

  integration-tests:
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Cache cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run full integration tests
        run: cargo test --workspace --all-features --verbose -- --test-threads=$(nproc)

  fuzz-smoke:
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust nightly
        run: rustup install nightly

      - name: Install cargo-fuzz
        run: cargo install cargo-fuzz --locked

      # ✅ Run short fuzz tests to prevent timeout
      - name: Run fuzz smoke tests
        run: |
          cargo +nightly fuzz run ethernet -- -max_total_time=10
          cargo +nightly fuzz run vlan -- -max_total_time=10
