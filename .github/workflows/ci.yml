name: CI

on:
  push:
  pull_request:

jobs:
  rust-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt, clippy

      - name: Format check (Rust)
        run: cargo fmt --all -- --check

      - name: Lint (Rust)
        run: cargo clippy --all-targets -- -D warnings

      - name: Build & Test Rust dataplane
        run: |
          cd dataplane-rs
          cargo build --release
          cargo test --verbose

  go-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Format check (Go)
        run: gofmt -s -l . && test -z "$(gofmt -s -l .)"

      - name: Lint (Go)
        run: golangci-lint run ./...

      - name: Build & Test Go control plane
        run: |
          cd control-plane-go
          go build ./...
          go test ./...

  integration-tests:
    runs-on: ubuntu-latest
    needs: [rust-checks, go-checks]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build test harness
        run: docker-compose -f docker-compose.test.yml build

      - name: Run integration tests
        run: docker-compose -f docker-compose.test.yml up --exit-code-from tests